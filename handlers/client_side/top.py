import random

from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.filters import Text

from create_bot.bot import dp
from handlers.client_side.register_user import start_register
from handlers.client_side.profile import get_attributes_user_for_profile
from handlers.client_side.payments_paypal import create_payments, check_payment
from databases.client_side import RegisterUserDB, TopDB
from databases.payments import KingChatDB
from keyboard.client_keyboard.inline.payments_paypal_keyboard import create_payment_king_chat_paypal_keyboard, \
    create_buy_king_chat_paypal_keyboard


# @dp.message_handler(commands='topüëë')
# @dp.message_handler(Text(equals=['top', '–¢–æ–ø', '—Ç–æ–ø', '–¢–æ–øüëë']))
async def get_top(message: Message):
    if message.chat.type == 'private':
        register_db = RegisterUserDB()
        check_register_user = register_db.user_exists(user_id=message.from_user.id)
        if check_register_user:
            top_text = f'–°–∞–º—ã–µ –ª—É—á—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥–Ω—ã –±–æ–ª–µ–µ <b>10 000 –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º</b>' \
                       f' –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤!\n\n'
            king_chat_db = KingChatDB()
            users_id = king_chat_db.get_users_id()  # ((user_id), (user_id))
            if users_id:
                phrase = ['–õ—É—á—à–∏–π –∏–∑ –ª—É—á—à–∏—Ö!', '–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–≤–æ–∏ –º–µ—á—Ç—ã ‚Äì –æ–Ω –Ω–µ —Ç–≤–æ–π —á–µ–ª–æ–≤–µ–∫',
                          '–õ—É—á—à–∏–µ –ª—é–¥–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ',
                          '–ú—É—Ä–ª—ã–∫–∞–Ω—å–µ –∫–æ—à–µ–∫ –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ —á–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ–≤–∞ –ª—é–¥–µ–π.',
                          '–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –¥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–ª–∏–∑–∫–∏–µ']
                for i, attribute_user in enumerate(users_id, 1):
                    user_id = attribute_user[0]
                    age, city, name_user, description_user, photo, instagram = await get_attributes_user_for_profile(
                        register_db=register_db, user_id=user_id)
                    top_text += f'{i}. üëâ<a href="tg://user?id={user_id}">{name_user}</a> - {random.choice(phrase)}\n'
                top_text += '\n–•–æ—á–µ—à—å —Ç–∞–∫–∂–µ? –¢–æ–≥–¥–∞ –≤—ã–≥–æ–Ω–∏ –∏–∑ –ø—Ä–µ—Å—Ç–æ–ª–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏ –∑–∞–π–º–∏ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ!'
                await message.answer(top_text, reply_markup=create_buy_king_chat_paypal_keyboard(), parse_mode='html')
            else:
                top_text += f'–û–¥–Ω–∞–∫–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –≤–∑—è—Ç—å –ø—Ä–µ—Å—Ç–æ–ª –≤ —Å–≤–æ–∏ —Ä—É–∫–∏! –ë—É–¥—å –∂–µ –ø–µ—Ä–≤—ã–º —Å—Ä–µ–¥–∏ ' \
                            f'–ª—É—á—à–∏—Ö'
                await message.answer(top_text, parse_mode='html', reply_markup=create_buy_king_chat_paypal_keyboard())
        else:
            await start_register(message.from_user.id)


# @dp.callback_query_handler(Text(startswith='king_chat_buy'))
async def create_king_payments(callback: CallbackQuery):
    price = 690
    king_chat_db = KingChatDB()
    if not king_chat_db.exists_user(callback.from_user.id):
        await callback.answer('–§–æ—Ä–º–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂...')
        url, payment_id = await create_payments(name='Buy Place King Chat', article='king_chat', price=price,
                                                description='Buying the place of the king of chat and becoming'
                                                            ' the most popular')
        await callback.message.answer('–°—Ç–∞—Ç—å –æ–¥–Ω–∏–º –∏–∑ –∫–æ—Ä–æ–ª–µ–π —á–∞—Ç–∞ - –¥–æ—Å—Ç–æ–π–Ω–æ–µ –¥–µ–ª–æ!\n\n'
                                      '–¢—ã –±—É–¥–µ—à—å –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤ —ç—Ç–æ–º —á–∞—Ç –±–æ—Ç–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤! \n\n–¢—ã –≥–æ—Ç–æ–≤?',
                                      reply_markup=create_payment_king_chat_paypal_keyboard(url, payment_id))

    else:
        await callback.answer()
        await callback.message.answer('–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞!')


# @dp.callback_query_handler(Text(startswith='check_king_pay_'))
async def check_payment_king_chat(callback: CallbackQuery):
    try:
        await callback.answer('–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂')
        king_chat_db = KingChatDB()
        if not king_chat_db.exists_user(callback.from_user.id):
            payment_id = callback.data[len('check_king_pay_'):]
            if await check_payment(payment_id):
                amount_users = len(king_chat_db.get_users_id())
                if amount_users < 3:
                    king_chat_db.add_user(user_id=callback.from_user.id)
                else:
                    delete_user_id = king_chat_db.get_users_id()[0][0]
                    king_chat_db.delete_user(delete_user_id)
                    king_chat_db.add_user(user_id=callback.from_user.id)
                await callback.message.answer('–° —ç—Ç–∏—Ö –ø–æ—Ä –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–Ω—ã–º —á–ª–µ–Ω–æ–º –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞!\n\n'
                                              '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –º–µ—Å—Ç –Ω–∞ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–æ–º —Ç—Ä–æ–Ω–µ')
            else:
                await callback.message.answer('–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω')
    except Exception as ex:
        await callback.message.answer('–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞! –ü—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–Ω–æ–≤–æ '
                                      '—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂')

    # if message.chat.type == 'private':
    #     register_db = RegisterUserDB()
    #     check_register_user = register_db.user_exists(user_id=message.from_user.id)
    #     if check_register_user:
    #         top_db = TopDB()
    #         users = top_db.get_top_users()  # ((user_id, ...), (user_id...), )
    #         if users:
    #             top_text = 'üëë<b>–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>üëë\n\n'
    #             for i, user in enumerate(users, 1):
    #                 age, city, name_user, description_user, photo, instagram = await get_attributes_user_for_profile(
    #                     register_db=register_db, user_id=user[0])
    #                 top_text += f'{i}. üëâ<a href="tg://user?id={user[0]}">{name_user}</a>\n' \
    #                             f'ü•∞–û—Ü–µ–Ω–æ–∫: {user[1]}, üîù—Ä–µ–π—Ç–∏–Ω–≥: {user[2]}\n\n'
    #
    #             top_text += f'–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥–Ω—ã –±–æ–ª–µ–µ <b>10 000 –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º</b>' \
    #                         f' –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤!'
    #
    #             await message.answer(top_text, parse_mode='html')
    #         else:
    #             await message.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏ –æ–¥–∏–Ω –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –±—ã–ª —É–¥–æ—Å—Ç–æ–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø\n\n'
    #                                  '–°—Ç–∞–Ω—å –∂–µ –ø–µ—Ä–≤—ã–º —Å—Ä–µ–¥–∏ –ª—É—á—à–∏—Ö!')
    #
    #     else:
    #         await start_register(message.from_user.id)


def register_handlers_top():
    dp.register_message_handler(get_top, commands='top')
    dp.register_message_handler(get_top, Text(equals=['top', '–¢–æ–ø', '—Ç–æ–ø', '–¢–æ–øüëë']))
    dp.register_callback_query_handler(create_king_payments, Text(startswith='king_chat_buy'))
    dp.register_callback_query_handler(check_payment_king_chat, Text(startswith='check_king_pay_'))
